import streamlit as st
import matplotlib.pyplot as plt
from models.query.parser import QueryParser
from models.query.manager import QueryManager
from utils.graphs import Graph
from utils.algebra import sql_to_algebra, optimize_algebra

st.set_page_config('Trabalho Consultas', page_icon='üë®‚Äçüíª', layout='wide')
st.title('Envio e Otimiza√ß√£o de Consultas')

with st.form('Formul√°rio de Envio de consultas'):
    # A string com a consulta SQL √© entrada na interface gr√°fica 
    user_query = st.text_area(
        'Campo de consultas', placeholder='Digite sua consulta aqui.')
    submit = st.form_submit_button('Enviar')

if submit:
    if user_query == '':
        st.warning('Requisi√ß√£o vazia n√£o pode ser realizada', icon='‚ùó')
        st.stop()
    
    # A string √© parseada e o comando SQL √© validado al√©m de validar se as tabelas existem e se 
    # os campos informados no select existem nas tabelas 
    parsed_query = QueryParser.parse_sql(user_query) 
    manager = QueryManager()
    
    if manager.is_query_valid(parsed_query):
        st.write(parsed_query)
        # O comando SQL √© convertido para √°lgebra relacional 
        relational_query = sql_to_algebra(parsed_query)
        # Mostrar na Interface a convers√£o do SQL para √°lgebra relacional 
        st.write('### _√Ålgebra Relacional_')
        st.write(relational_query)
        
        optimized_query = optimize_algebra(relational_query)
        
        # TODO A √°lgebra relacional √© otimizada conforme as heur√≠sticas solicitadas (ver item 5) 
        st.write('### _√Ålgebra Relacional - Otimizada_')
        st.write(optimized_query)
        
        # TODO O grafo de operadores √© constru√≠do em mem√≥ria 
        graph = Graph().build_operator_graph(parsed_query)
        # TODO O grafo de operadores deve ser mostrado na Interface gr√°fica 
        st.write('### _Gr√°fico de Operadores_')    
        st.write(graph)
        # TODO O resultado da consulta mostrando cada opera√ß√£o e a ordem que ser√° executada, √© exibido 
        # na interface gr√°fica (plano de execu√ß√£o) 
        st.write('### _Plano de Execu√ß√£o_')
        